# -*- mode: ruby -*-
# vi: set ft=ruby :
##############################################################################
# Copyright (c) 2019
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

$no_proxy = ENV['NO_PROXY'] || ENV['no_proxy'] || "127.0.0.1,localhost"
# NOTE: This range is based on vagrant-libvirt network definition CIDR 192.168.121.0/24
(1..254).each do |i|
  $no_proxy += ",192.168.121.#{i}"
end
$no_proxy += ",10.0.2.15"
$socks_proxy = ENV['socks_proxy'] || ENV['SOCKS_PROXY'] || ""

File.exists?("/usr/share/qemu/OVMF.fd") ? loader = "/usr/share/qemu/OVMF.fd" : loader = File.join(File.dirname(__FILE__), "OVMF.fd")
if not File.exists?(loader)
  system('curl -O https://download.clearlinux.org/image/OVMF.fd')
end

Vagrant.configure("2") do |config|
  config.vm.provider :libvirt
  config.vm.provider :virtualbox

  config.vm.synced_folder './', '/vagrant', type: "rsync"
  config.vm.define "ubuntu_xenial" do |ubuntu|
    ubuntu.vm.box = 'elastic/ubuntu-16.04-x86_64'
    ubuntu.vm.box_version = '20180210.0.0'
  end
  config.vm.define "ubuntu_bionic" do |ubuntu|
    ubuntu.vm.box = 'peru/ubuntu-18.04-server-amd64'
    ubuntu.vm.box_version = '20190905.01'
  end
  config.vm.define "centos7" do |centos|
    centos.vm.box = 'centos/7'
    centos.vm.box_version = '1905.01'
  end
  config.vm.define "centos8" do |centos|
    centos.vm.box = 'generic/centos8'
    centos.vm.box_version = '2.0.0'
  end
  config.vm.define "clearlinux" do |clearlinux|
    clearlinux.vm.box = 'AntonioMeireles/ClearLinux'
    clearlinux.vm.box_version = '31130'
    clearlinux.vm.provider 'libvirt' do |v|
      v.loader = loader
    end
  end
  config.vm.define "opensuse" do |opensuse|
    opensuse.vm.box = 'opensuse/Tumbleweed.x86_64'
    opensuse.vm.box_version = '1.0.20191110'
  end

  $vagrant_root = File.dirname(__FILE__)
  $vagrant_root.slice! "golang"
  config.vm.provision 'shell', path: "#{$vagrant_root}/_requirements.sh"
  config.vm.provision 'shell', privileged: false do |sh|
    sh.inline = <<-SHELL
      set -o xtrace
      cd /vagrant/
      ./main.sh | tee ~/go_main.log
    SHELL
  end
  config.vm.provision 'shell', privileged: false do |sh|
    sh.inline = <<-SHELL
      cd /vagrant/
      ./validate.sh | tee ~/go_validate.log
    SHELL
  end

  [:virtualbox, :libvirt].each do |provider|
  config.vm.provider provider do |p|
      p.cpus = 1
      p.memory = 1024
    end
  end

  config.vm.provider :libvirt do |v|
    v.random_hostname = true
    v.management_network_address = "192.168.121.0/24"
  end

  if ENV['http_proxy'] != nil and ENV['https_proxy'] != nil
    if Vagrant.has_plugin?('vagrant-proxyconf')
      config.proxy.http     = ENV['http_proxy'] || ENV['HTTP_PROXY'] || ""
      config.proxy.https    = ENV['https_proxy'] || ENV['HTTPS_PROXY'] || ""
      config.proxy.no_proxy = $no_proxy
      config.proxy.enabled = { docker: false, git: false }
    end
  end
end
