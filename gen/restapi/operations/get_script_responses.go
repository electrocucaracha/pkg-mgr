// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetScriptOKCode is the HTTP code returned for type GetScriptOK
const GetScriptOKCode int = 200

/*GetScriptOK returns a bash script

swagger:response getScriptOK
*/
type GetScriptOK struct {

	/*contains the bash instructions to install the desired package
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetScriptOK creates GetScriptOK with default headers values
func NewGetScriptOK() *GetScriptOK {

	return &GetScriptOK{}
}

// WithPayload adds the payload to the get script o k response
func (o *GetScriptOK) WithPayload(payload string) *GetScriptOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get script o k response
func (o *GetScriptOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetScriptOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetScriptNotFoundCode is the HTTP code returned for type GetScriptNotFound
const GetScriptNotFoundCode int = 404

/*GetScriptNotFound The bash script was not found

swagger:response getScriptNotFound
*/
type GetScriptNotFound struct {
}

// NewGetScriptNotFound creates GetScriptNotFound with default headers values
func NewGetScriptNotFound() *GetScriptNotFound {

	return &GetScriptNotFound{}
}

// WriteResponse to the client
func (o *GetScriptNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*GetScriptDefault Error

swagger:response getScriptDefault
*/
type GetScriptDefault struct {
	_statusCode int
}

// NewGetScriptDefault creates GetScriptDefault with default headers values
func NewGetScriptDefault(code int) *GetScriptDefault {
	if code <= 0 {
		code = 500
	}

	return &GetScriptDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get script default response
func (o *GetScriptDefault) WithStatusCode(code int) *GetScriptDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get script default response
func (o *GetScriptDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetScriptDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
